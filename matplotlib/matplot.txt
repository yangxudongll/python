import mpl_toolkits.axisartist as axisartist
fig=plt.figure(figsize=(8,8))
ax=axisartist.Subplot(fig,111)
fig.add(ax)
#通过set_visiable方法设置绘图区所有坐标轴隐藏
ax.axis[:].set_visible(False)
#ax.new_floating_axis代表添加新的坐标轴
ax.axis["x"]=ax.new_floating_axis(0,0)
ax.axis["y"]=ax.new_floating_axis(1,0)
#给坐标轴添加箭头
ax.axis["x"].set_axisline_style("->",size=1.0)
ax.axis["y"].set_axisline_style("-|>",size=1.0)
设置x,y轴上显示刻度方向
ax.axis["x"].set_axis_direction("top")   #bottom
ax.axis["y"].set_axis_direction("right")   #right


设置坐标轴位置
ax=plt.gca()
ax.spines['top'].set_color('none')
ax.spines['right'].set_color('none')
ax.xaxis.set_ticks_position('bottom')
ax.yaxis.set_ticks_position('left')
ax.spines['left'].set_position(('data',0))

设置坐标标签（fontproperties字体变量，不加可能乱码）
plt.xlabel(u"相对位置",fontproperties='SimHei',fontsize=14)

显示中文
plt.rcParams['font.sans-serif']=['FangSong']
plt.rcParams['axes.unicode_minus']=False

Windows对应字体名称
黑体 	SimHei 
微软雅黑 	Microsoft YaHei 
微软正黑体 	Microsoft JhengHei 
新宋体 	NSimSun 
新细明体 	PMingLiU 
细明体 	MingLiU 
标楷体 	DFKai-SB 
仿宋 	FangSong 
楷体 	KaiTi 
仿宋_GB2312 	FangSong_GB2312 
楷体_GB2312 	KaiTi_GB2312 


添加注释
plt.text(7,-0.5,r'距离x/mm',fontdict={'size':10,'color':'red'})
plt.annotate(r'$2 * x + 1 = %s$' % y0, xy = (x0, y0), xycoords = 'data', xytext = (+30, -30), \ textcoords = 'offset points', fontsize = 16, arrowprops = dict(arrowstyle = '->', connectionstyle = 'arc3, rad = .2'))

